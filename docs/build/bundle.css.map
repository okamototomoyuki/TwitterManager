{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"typescript\">import { onMount } from \"svelte\";\r\nimport { xlink_attr } from \"svelte/internal\";\r\nimport Twitter from \"twitter-lite\";\r\nvar _STATE;\r\n(function (_STATE) {\r\n    _STATE[_STATE[\"NONE\"] = 0] = \"NONE\";\r\n    _STATE[_STATE[\"INIT\"] = 1] = \"INIT\";\r\n    _STATE[_STATE[\"REQUIRE\"] = 2] = \"REQUIRE\";\r\n    _STATE[_STATE[\"DONE\"] = 3] = \"DONE\";\r\n    _STATE[_STATE[\"ERROR\"] = 4] = \"ERROR\";\r\n})(_STATE || (_STATE = {}));\r\nlet state;\r\nlet error;\r\nlet text;\r\n// 入力欄値更新時\r\nconst handleClick = (e) => {\r\n    const word = text.value;\r\n    if (\"chrome\" in window && \"webview\" in window[\"chrome\"]) {\r\n        // WebView2 から呼び出されてるならメッセージ\r\n        window[\"chrome\"].webview.postMessage(`google:${word}`);\r\n    }\r\n    else {\r\n        // ブラウザからなら通常の新しいウインドウ\r\n        window.open(`https://www.google.com/search?q=${word}`);\r\n    }\r\n    text.value = \"\";\r\n};\r\n// 初期化時\r\nonMount(async () => {\r\n    state = _STATE.INIT;\r\n    const url = new URL(location.href);\r\n    const params = url.searchParams;\r\n    const consumerKey = params.get(\"consumer_key\") ?? \"\";\r\n    const consumerSecret = params.get(\"consumer_secret\") ?? \"\";\r\n    if (consumerKey.length == 0 || consumerSecret.length == 0) {\r\n        state = _STATE.ERROR;\r\n        error = \"consumer_key または consumer_secret を URL で指定してください。\";\r\n        return;\r\n    }\r\n    // 記録情報で認証\r\n    const userToken = window.localStorage.getItem(\"USER_TOKEN\") ?? \"\";\r\n    const userSecret = window.localStorage.getItem(\"USER_SECRET\") ?? \"\";\r\n    let cred = null;\r\n    if (userToken !== \"\" && userSecret !== \"\") {\r\n        const client = new Twitter({\r\n            consumer_key: consumerKey,\r\n            consumer_secret: consumerSecret,\r\n            access_token_key: userToken,\r\n            access_token_secret: userSecret,\r\n        });\r\n        try {\r\n            cred = await client.get(\"account/verify_credentials\");\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n    if (cred === null) {\r\n        const client = new Twitter({\r\n            consumer_key: consumerKey,\r\n            consumer_secret: consumerSecret,\r\n        });\r\n        const res = await client.getRequestToken(\"http://callbackurl.com\");\r\n    }\r\n    // 記録情報がNGなら認証\r\n    // if (result.access_token == null) {\r\n    //   state = _STATE.REQUIRE;\r\n    //   client = new Twitter({\r\n    //     consumer_key: consumerKey,\r\n    //     consumer_secret: consumerSecret,\r\n    //   });\r\n    //   let tokenReponse = await client.getRequestToken(\"https://google.com\");\r\n    //   if (result.access_token == null) {\r\n    //     state = _STATE.ERROR;\r\n    //     error = \"認証に失敗しました。\";\r\n    //     return;\r\n    //   }\r\n    // }\r\n    // if (userToken == null || userSecret == null) {\r\n    //   //\r\n    // }\r\n    text.focus();\r\n});\r\n// WebView2 活性時\r\nwindow[\"OnActive\"] = () => {\r\n    text.focus();\r\n};\r\n</script>\n\n<style lang=\"scss\">textarea {\n  width: 100%;\n  height: 100%;\n}</style>\n\n<main>\n  {#if state == _STATE.ERROR}\n    <div>{error}</div>\n  {:else if state == _STATE.INIT}\n    初期化中\n  {:else if state == _STATE.REQUIRE}\n    <button on:change={handleClick}>認証</button>\n  {:else}\n    <textarea bind:this={text} on:change={handleClick} />\n  {/if}\n</main>\n"
  ],
  "names": [],
  "mappings": "AAyFmB,QAAQ,cAAC,CAAC,AAC3B,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC"
}